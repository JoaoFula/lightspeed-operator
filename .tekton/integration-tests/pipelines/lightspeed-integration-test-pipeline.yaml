---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  annotations:
    pipelinesascode.tekton.dev/task: "[ols-installer, ols-e2e-task]"
  name: ols-integration-tests-pipeline
spec:
  description: |
    This pipeline automates the process of running end-to-end tests for Openshift Lightspeed
    using a ROSA (Red Hat OpenShift Service on AWS) cluster. The pipeline provisions
    the ROSA cluster, installs the openshift lightspeed operator using the installer, runs the tests, collects artifacts,
    and finally deprovisions the ROSA cluster.
  params:
    - name: SNAPSHOT
      description: 'The JSON string representing the snapshot of the application under test.'
      default: '{"components": [{"name":"test-app", "containerImage": "quay.io/example/repo:latest"}]}'
      type: string
    - name: test-name
      description: 'The name of the test corresponding to a defined Konflux integration test.'
      default: 'ols-e2e-tests'
  tasks:
    - name: eaas-provision-space
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/build-definitions.git
          - name: revision
            value: main
          - name: pathInRepo
            value: task/eaas-provision-space/0.1/eaas-provision-space.yaml
      params:
        - name: ownerKind
          value: PipelineRun
        - name: ownerName
          value: $(context.pipelineRun.name)
        - name: ownerUid
          value: $(context.pipelineRun.uid)
    - name: ols-install
      description: Task to install bundle onto ephemeral namespace
      runAfter:
        - eaas-provision-space
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
        - name: SecretRef
          value: $(task.eaas-provision-space.results.SecretRef)
        - name: revision
          value: "{{revision}}"
      taskSpec:
        params:
          - name: SNAPSHOT
          - name: SecretRef
        steps:
          - name: install-operator
            env:
              - name: SNAPSHOT
                value: $(params.SNAPSHOT)
              - name: KONFLUX_COMPONENT_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.labels['appstudio.openshift.io/component']
            image: registry.redhat.io/openshift4/ose-cli:latest
            script: |
              dnf -y install jq python3-pip

              echo "---------------------------------------------"
              echo ${SNAPSHOT} | jq .
              echo "---------------------------------------------"
              echo ${KONFLUX_COMPONENT_NAME}
              echo $(jq -r --arg component_name "$KONFLUX_COMPONENT_NAME" '.components[] | select(.name == $component_name) | .containerImage' <<< "$SNAPSHOT")
              echo "---------------------------------------------"
              echo -e "The install command will come here"

