kind: Pipeline
apiVersion: tekton.dev/v1beta1
metadata:
  name: integration-tests
spec:
  params:
    - description: 'Snapshot of the application'
      name: SNAPSHOT
      default: '{"components": [{"name":"test-app", "containerImage": "quay.io/example/repo:latest"}]}'
      type: string
    - description: 'Namespace where the application is running'
      name: NAMESPACE
      default: "default"
      type: string
  tasks:
    - name: task-1
      description: Placeholder task that prints the Snapshot and outputs standard TEST_OUTPUT
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
      taskSpec:
        params:
        - name: SNAPSHOT
        results:
        - name: TEST_OUTPUT
          description: Test output
        steps:
        - image: registry.redhat.io/openshift4/ose-cli:latest
          env:
          - name: SNAPSHOT
            value: $(params.SNAPSHOT)
          - name: TEST
            valueFrom:
              secretKeyRef:
                name: "foo"
                key: "bar"
          script: |
            dnf -y install jq
            echo -e "Example test task for the Snapshot:\n ${SNAPSHOT}"
            echo ${SNAPSHOT} | jq .
            env

            LIGHTSPEED_CONSOLE_IMAGE=$(echo ${SNAPSHOT} | jq -r '.components[] | select(.name=="lightspeed-console") | .containerImage')
            LIGHTSPEED_OPERATOR_IMAGE=$(echo ${SNAPSHOT} | jq -r '.components[] | select(.name=="lightspeed-operator") | .containerImage')
            LIGHTSPEED_SERVICE_IMAGE=$(echo ${SNAPSHOT} | jq -r '.components[] | select(.name=="lightspeed-service") | .containerImage')

            echo "----------------------------"
            echo "Images to be tested:"
            echo "Lightspeed console:  ${LIGHTSPEED_CONSOLE_IMAGE}"
            echo "Lightspeed operator: ${LIGHTSPEED_OPERATOR_IMAGE}"
            echo "Lightspeed service:  ${LIGHTSPEED_SERVICE_IMAGE}"
            echo "----------------------------"

            RESULT="SUCCESS"

            TEST_OUTPUT=$(jq -rc --arg date $(date +%s) --arg RESULT "${RESULT}" --null-input \
              '{result: $RESULT, timestamp: $date, failures: 0, successes: 1, warnings: 0}')
            echo "${TEST_OUTPUT}"
            echo -n "${TEST_OUTPUT}" | tee $(results.TEST_OUTPUT.path)
